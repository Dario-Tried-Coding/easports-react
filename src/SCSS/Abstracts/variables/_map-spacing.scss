@use "../mixins/mixin-breakpoints" as *;

$map-spacing: (
  small: (
    padding: (
      inline: (
        section: 7.5vw,
      ),
    ),
  ),
  medium: (
    padding: (
      inline: (
        section: 7.8125vw,
      ),
    ),
  ),
  large: (
    padding: (
      inline: (
        section: 7.4218vw,
      ),
    ),
  ),
  xlarge: (
    padding: (
      inline: (
        section: calc((100vw - 1120px) / 2),
      ),
    ),
  ),
);

:root {
  @each $breakpoint, $cssRules in $map-spacing {
    @if $breakpoint == small {
      @each $cssRule, $directions in $cssRules {
        @each $direction, $variations in $directions {
          @each $variation, $value in $variations {
            --#{$cssRule}-#{$direction}-#{$variation}: #{$value};
          }
        }
      }
    } @else if $breakpoint == medium {
      @include mq($breakpoint) {
        @each $cssRule, $directions in $cssRules {
          @each $direction, $variations in $directions {
            @each $variation, $value in $variations {
              --#{$cssRule}-#{$direction}-#{$variation}: #{$value};
            }
          }
        }
      }
    } @else if $breakpoint == large {
      @include mq($breakpoint) {
        @each $cssRule, $directions in $cssRules {
          @each $direction, $variations in $directions {
            @each $variation, $value in $variations {
              --#{$cssRule}-#{$direction}-#{$variation}: #{$value};
            }
          }
        }
      }
    } @else if $breakpoint == xlarge {
      @include mq($breakpoint) {
        @each $cssRule, $directions in $cssRules {
          @each $direction, $variations in $directions {
            @each $variation, $value in $variations {
              --#{$cssRule}-#{$direction}-#{$variation}: #{$value};
            }
          }
        }
      }
    }
  }
}

@each $breakpoint, $cssRules in $map-spacing {
  @each $cssRule, $directions in $cssRules {
    @each $direction, $variations in $directions {
      @each $variation, $value in $variations {
        .#{$cssRule}-#{$direction}-#{$variation} {
          #{$cssRule}-#{$direction}: var(
            --#{$cssRule}-#{$direction}-#{$variation}
          );
        }
      }
    }
  }
}
