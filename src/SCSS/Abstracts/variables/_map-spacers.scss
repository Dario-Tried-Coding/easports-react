@use "../mixins/mixin-breakpoints" as *;

$map-flow-spacers: (
  flow-spacer: (
    small: (
      section-100: 1.5rem,
    ),
    medium: (
      section-100: 2rem,
    ),
    large: (
      section-100: 2.5rem,
    ),
    xlarge: (
      section-100: 3rem,
    ),
  ),
);

/**
* @tokens Flow Spacers
* @presenter Spacing
*/
$flow-spacer-section-100: 3rem; //24px -> 32px -> 40px -> 48px
/**
* @tokens-end
*/

:root {
  @each $branch, $breakpoints in $map-flow-spacers {
    @each $breakpoint, $flow-spacers in $breakpoints {
      @if $breakpoint == small {
        @each $flow-spacer, $value in $flow-spacers {
          --#{$branch}-#{$flow-spacer}: #{$value};
        }
      } @else if $breakpoint == medium {
        @include mq($breakpoint) {
          @each $flow-spacer, $value in $flow-spacers {
            --#{$branch}-#{$flow-spacer}: #{$value};
          }
        }
      } @else if $breakpoint == large {
        @include mq($breakpoint) {
          @each $flow-spacer, $value in $flow-spacers {
            --#{$branch}-#{$flow-spacer}: #{$value};
          }
        }
      } @else if $breakpoint == xlarge {
        @include mq($breakpoint) {
          @each $flow-spacer, $value in $flow-spacers {
            --#{$branch}-#{$flow-spacer}: #{$value};
          }
        }
      }
    }
  }
}

@each $branch, $breakpoints in $map-flow-spacers {
  @each $breakpoint, $flow-spacers in $breakpoints {
    @each $flow-spacer, $value in $flow-spacers {
      .#{$branch}-#{$flow-spacer} > * + * {
        margin-top: var(--#{$branch}-#{$flow-spacer});
      }
    }
  }
}